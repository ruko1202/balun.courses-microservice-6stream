services:
  nginx:
    image: nginx
    volumes:
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    ports:
      - "8000:8000"
      - "8001:8001"
    depends_on:
      - api-gateway
#      - auth
#      - chat-message
#      - friend
#      - media
#      - notification
#      - user-profile

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: .build/Dockerfile
      args:
        - SERVICE_NAME=api-gateway
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/liveness"]
      interval: 6s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s

  auth:
    build:
      context: ./auth
      dockerfile: .build/Dockerfile
      args:
        - SERVICE_NAME=auth
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/liveness"]
      interval: 6s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s

  chat-message:
    build:
      context: ./chat-message
      dockerfile: .build/Dockerfile
      args:
        - SERVICE_NAME=chat-message
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/liveness"]
      interval: 6s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s

  friend:
    build:
      context: ./friend
      dockerfile: .build/Dockerfile
      args:
        - SERVICE_NAME=friend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/liveness"]
      interval: 6s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s

  media:
    build:
      context: ./media
      dockerfile: .build/Dockerfile
      args:
        - SERVICE_NAME=media
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/liveness"]
      interval: 6s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s

  notification:
    build:
      context: ./notification
      dockerfile: .build/Dockerfile
      args:
        - SERVICE_NAME=notification
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/liveness"]
      interval: 6s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s

  user-profile:
    build:
      context: ./user-profile
      dockerfile: .build/Dockerfile
      args:
        - SERVICE_NAME=user-profile
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/liveness"]
      interval: 6s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s
